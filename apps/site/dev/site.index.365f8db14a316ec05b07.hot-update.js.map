{"version":3,"file":"site.index.365f8db14a316ec05b07.hot-update.js","sources":["webpack:////home/radic/theme/packages/core/src/components/App.tsx","webpack:////home/radic/theme/packages/core/src/components/documents/Document.tsx","webpack:////home/radic/theme/packages/core/src/components/dynamic-menu/DefaultMenuItemRenderer.tsx","webpack:////home/radic/theme/packages/core/src/components/dynamic-menu/DynamicMenu.tsx","webpack:////home/radic/theme/packages/core/src/components/dynamic-menu/HeaderMenuItemRenderer.tsx","webpack:////home/radic/theme/packages/core/src/components/dynamic-menu/MenuItemIcon.tsx","webpack:////home/radic/theme/packages/core/src/components/errors/ErrorBoundary.tsx","webpack:////home/radic/theme/packages/core/src/components/router-pages/RouterPages.tsx","webpack:////home/radic/theme/packages/core/src/decorators.tsx","webpack:////home/radic/theme/packages/core/src/index.ts"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { hot, WithRouter, WithRouterProps } from '../decorators';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Store } from '../stores';\nimport { observer } from 'mobx-react';\nimport { Routes } from '../collections/Routes';\nimport { app, lazyInject } from '../ioc';\nimport { Helmet } from 'react-helmet';\nimport { ErrorBoundary } from './errors';\nimport { RouterPages } from './router-pages';\n\nimport 'styling/stylesheet.scss';\nimport 'styling/semantic.less';\n// noinspection ES6UnusedImports\nimport styles from './App.mscss'\nimport './App.mscss'\nimport { Layout } from './layout';\n\nconst log = require('debug')('app');\n\ninterface State {}\n\nexport interface AppProps {}\n\n@hot(module)\n@WithRouter()\n@observer\nexport class App extends React.Component<AppProps & WithRouterProps, any> {\n    @lazyInject('store') store: Store;\n    @lazyInject('routes') routes: Routes;\n\n    static displayName  = 'App';\n    static contextTypes = {\n        router: PropTypes.shape({\n            history: PropTypes.shape({\n                push      : PropTypes.func.isRequired,\n                replace   : PropTypes.func.isRequired,\n                createHref: PropTypes.func.isRequired,\n            }).isRequired,\n        }).isRequired,\n    };\n\n    context: { router: BrowserRouter };\n\n    constructor(props: {} & WithRouterProps, context: { router: BrowserRouter }) {\n        super(props, context);\n        if ( ! app.isBound(BrowserRouter) ) {\n            app.bind(BrowserRouter, 'router').toConstantValue(context.router);\n        }\n        if ( ! app.isBound('history') ) {\n            app.bind('history').toConstantValue(props.history);\n        }\n    }\n\n    render() {\n        return (\n\n            <ErrorBoundary>\n                <Layout>\n                    <Helmet\n                        defaultTitle={this.store.codex.display_name}\n                        titleTemplate={this.store.codex.display_name + ' - %s'}\n                    />\n                    <ErrorBoundary>\n                        <RouterPages routes={this.routes}/>\n                    </ErrorBoundary>\n                </Layout>\n            </ErrorBoundary>\n        );\n    }\n\n\n    render2() {\n        // let routes = app.get<Routes>('routes')\n        return (\n            <Layout>\n                <Helmet\n                    defaultTitle={this.store.codex.display_name}\n                    titleTemplate={this.store.codex.display_name + ' - %s'}\n                />\n                <ErrorBoundary>\n                    {/*<LayoutHeader/>*/}\n                </ErrorBoundary>\n\n                <Layout>\n\n                    <ErrorBoundary>\n                        {/*<LayoutSidebar/>*/}\n                    </ErrorBoundary>\n\n                    <ErrorBoundary>\n                        {/*<LayoutContent>*/}\n                        <ErrorBoundary>\n                            <RouterPages routes={this.routes}/>\n                        </ErrorBoundary>\n                        {/*</LayoutContent>*/}\n                    </ErrorBoundary>\n\n                </Layout>\n\n                <ErrorBoundary>\n                    {/*<LayoutFooter/>*/}\n                </ErrorBoundary>\n            </Layout>\n        );\n    }\n}\n","import React from 'react';\nimport { hot } from '../../decorators';\nimport { Card } from 'antd';\nimport { app, lazyInject } from '../../ioc';\nimport { renderLoading } from '../loading';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport { Api } from '@codex/api';\nimport { observer } from 'mobx-react';\nimport { getPrism } from '../../utils/get-prism';\nimport { HtmlComponents } from '../../classes/HtmlComponents';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Store } from '../../stores';\nimport Helmet from 'react-helmet';\nimport { toJS } from 'mobx';\n\nconst { Meta } = Card;\n\nconst log = require('debug')('components:document');\n\nexport interface DocumentProps {\n    project: string\n    revision: string\n    document: string\n    processAttributes?: (attributes: any) => void\n    updateTitle?: boolean\n}\n\ninterface State {\n    document: any\n}\n\n@hot(module)\n@observer\nexport class Document extends React.Component<DocumentProps, State> {\n    @lazyInject('api') api: Api;\n    @lazyInject('components') hc: HtmlComponents;\n    @lazyInject('store') store: Store;\n\n    static displayName                          = 'Document';\n    static defaultProps: Partial<DocumentProps> = {\n        processAttributes: () => null,\n        updateTitle      : false,\n    };\n\n    static childContextTypes = {\n        router    : PropTypes.object.isRequired,\n        document  : PropTypes.object,\n        attributes: PropTypes.object,\n    };\n\n    getChildContext() {\n        return {\n            router    : app.get<BrowserRouter>(BrowserRouter),\n            document  : toJS(this.store.document),\n            attributes: toJS(this.store.document),\n        };\n    }\n\n    public componentDidMount() {\n        this.load();\n    }\n\n    public componentDidUpdate(prevProps: Readonly<DocumentProps>, prevState: Readonly<State>, snapshot?: any): void {\n        let projectChanged  = this.props.project !== prevProps.project;\n        let revisionChanged = this.props.revision !== prevProps.revision;\n        let documentChanged = this.props.document !== prevProps.document;\n        if ( prevProps && prevState && (projectChanged || revisionChanged || documentChanged) ) {\n            this.load();\n        }\n    }\n\n    async load() {\n        await this.store.fetchDocument(this.props.project, this.props.revision, this.props.document);\n        await getPrism();\n    }\n\n    render() {\n        if ( ! this.store.document || ! this.store.document.content || this.store.fetching ) return renderLoading();\n        const content = this.hc.parse(this.store.document.content);\n\n        if ( this.props.updateTitle ) {\n            return (\n                <div id=\"document\">\n                    <Helmet>\n                        <title>{this.store.document.title || this.props.document}</title>\n                    </Helmet>\n                    {content}\n                </div>\n            );\n        }\n        return <div id=\"document\">{content}</div>;\n    }\n}\n","import * as React from 'react';\nimport { hot } from '../../decorators';\nimport { MenuItemRenderer, MenuItemRendererProps } from './DynamicMenu';\nimport { Menu as AntdMenu } from 'antd';\nimport { MenuItemIcon } from './MenuItemIcon';\n\nconst { SubMenu, Item } = AntdMenu;\n\nconst log = require('debug')('components:DefaultMenuItemRenderer');\n\n\n@hot(module,true)\n@MenuItemRenderer('default')\nexport class DefaultMenuItemRenderer extends React.Component<MenuItemRendererProps> {\n    static displayName = 'DefaultMenuItemRenderer';\n\n    render() {\n        if ( ! this.props.item ) return null;\n        let { item, fontSize, iconStyle, color,...props } = this.props;\n        let label                                = item.label;\n\n        return (\n            <Item key={item.id} {...props}>\n                <span style={{ fontSize, paddingRight: iconStyle.paddingRight }}>\n                    <MenuItemIcon item={item} iconStyle={iconStyle} fontSize={fontSize}/>\n                    {label}\n                </span>\n            </Item>\n        );\n    }\n}\n","import React from 'react';\nimport { hot } from '../../decorators';\nimport PropTypes from 'prop-types';\nimport { Layout, Menu as AntdMenu } from 'antd';\nimport { observer } from 'mobx-react';\nimport { api } from '@codex/api';\nimport { MenuProps as AntdMenuProps } from 'antd/es/menu';\nimport { getColor } from '../../utils/colors';\nimport { MenuItemIcon } from './MenuItemIcon';\nimport { classes } from 'typestyle';\nimport { MenuItems } from '../../menus';\nimport { ClickParam } from 'antd/lib/menu';\n\nconst log = require('debug')('components:DynamicMenu');\n\nconst { Sider }                  = Layout;\nconst { SubMenu, Item, Divider } = AntdMenu;\n\nexport type MenuExpandBehaviourType = 'single-root' | 'multi-root'\nexport type MenuSelectBehaviourType = 'single' | 'multi'\n\nexport interface DynamicMenuProps {\n    items: MenuItems\n    iconStyle?: React.CSSProperties\n    fontSize?: number | string\n    color?: string,\n    renderer?: string\n    rendererMaxLevel?: number\n    multiroot?: boolean\n    selectFromRoutePath?: boolean\n}\n\ninterface State {\n    items: MenuItems\n    openKeys: string[]\n    idstring: string\n}\n\nexport function MenuItemRenderer(name: string) {\n    return (TargetComponent) => {\n        DynamicMenu.renderers[ name ] = TargetComponent;\n        return TargetComponent;\n    };\n}\n\nexport type MenuItemRendererProps= DynamicMenuProps & {\n    [ key: string ]: any\n    item: api.MenuItem\n}\n\n@hot(module)\n@observer\nexport class DynamicMenu extends React.Component<DynamicMenuProps & AntdMenuProps, State> {\n    static displayName                                                            = 'DynamicMenu';\n    static defaultProps: Partial<DynamicMenuProps & AntdMenuProps>                = {\n        iconStyle          : { paddingRight: 20 },\n        fontSize           : 12,\n        renderer           : 'default',\n        prefixCls          : 'c-dmenu',\n        mode               : 'horizontal',\n        rendererMaxLevel   : 0,\n        multiroot          : false,\n        multiple           : false,\n        selectFromRoutePath: true,\n\n    };\n    static renderers: Record<string, React.ComponentType<{ item: api.MenuItem }>> = {};\n    static contextTypes                                                           = {\n        siderCollapsed: PropTypes.bool,\n        collapsedWidth: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n    };\n    context: { siderCollapsed: boolean, collapsedWidth: number | string };\n\n\n    componentDidMount() {\n        this.selectFromRoutePath();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if ( this.props.items !== nextProps.items ) {\n            this.selectFromRoutePath(nextProps.items);\n        }\n    }\n\n    selectFromRoutePath(items: MenuItems = this.props.items) {\n        if ( this.props.selectFromRoutePath ) {\n            items.deselectAll();\n            items.selectActiveFromRoute(true, ! this.props.multiroot);\n        }\n    }\n\n    onOpenChange = (openKeys: string[]) => {\n        log('onOpenChange', openKeys);\n    };\n\n    onClick = (param: ClickParam) => {\n        log('onClick', param);\n        let { items } = this.props;\n        let item      = items.item(param.key);\n        items.handleClick(item, param.domEvent);\n        if ( item.selected ) {\n            if ( this.props.multiple === false ) {\n                items.deselectAll().select(item)\n            }\n        } else {\n            this.selectFromRoutePath();\n        }\n    };\n\n    onTitleClick = (param: ClickParam) => {\n        log('onTitleClick', param);\n        let item = this.props.items.item(param.key);\n        this.props.items.handleClick(item, param.domEvent);\n    };\n\n    renderMenuItem(item: api.MenuItem, level?: number) {\n        const { fontSize, iconStyle, color, mode, items } = this.props;\n        const className                                   = `item-${item.type}`;\n\n        // if ( level === 0 && ! item.icon ) {\n        //     item.icon = 'caret-right';\n        // }\n        switch ( item.type ) {\n            case 'divider':\n                return (<Divider key={item.id} className={className}>{mode === 'horizontal' ? '&nbsp' : null}</Divider>);\n            case 'header':\n                return (<Item key={item.id} className={className}><MenuItemIcon item={item} iconStyle={iconStyle} fontSize={fontSize}/>{item.label}</Item>);\n            case 'sub-menu':\n                return (\n                    <SubMenu\n                        className={className}\n                        key={item.id}\n                        title={<span style={{ fontSize, paddingRight: iconStyle.paddingRight }}><MenuItemIcon item={item} iconStyle={iconStyle} fontSize={fontSize}/> {item.label}</span>}\n                        onTitleClick={this.onTitleClick}\n                    >\n                        {item.children.map(child => this.renderMenuItem(child, level + 1))}\n                    </SubMenu>\n                );\n        }\n        let renderer = this.props.renderer;\n        if ( level > this.props.rendererMaxLevel ) {\n            renderer = 'default';\n        }\n        if ( DynamicMenu.renderers[ renderer ] ) {\n            const Component = DynamicMenu.renderers[ renderer ];\n            let props       = { level, className, fontSize, iconStyle, color };\n            return <Component key={item.id} item={item} {...props || {}} />;\n        }\n        return null;\n    }\n\n    render() {\n        const { children, className, multiple, multiroot, selectFromRoutePath, prefixCls, mode, fontSize, iconStyle, items, color, renderer, rendererMaxLevel, ...props } = this.props;\n\n        if ( typeof items.selected !== 'function' ) {\n            return null;\n        }\n\n        // log('render', { items, selected: items.selected().ids(), expanded: items.expanded().ids() });\n\n        const menuClassName = classes(className, prefixCls,\n            `${prefixCls}-${mode}`,\n            `${prefixCls}-theme-${mode}`,\n        );\n        return (\n            <AntdMenu\n                mode={mode}\n                className={menuClassName}\n                subMenuCloseDelay={0.6}\n                style={{ fontSize, backgroundColor: getColor(color) }}\n                selectedKeys={items.selected().ids()}\n                openKeys={items.expanded().ids()}\n                onClick={this.onClick}\n                onOpenChange={this.onOpenChange}\n                multiple={multiple}\n                {...props}\n            >\n                {items.map(item => this.renderMenuItem(item, 0))}\n            </AntdMenu>\n        );\n    }\n}\n","import * as React from 'react';\nimport { hot } from '../../decorators';\nimport { MenuItemRenderer, MenuItemRendererProps } from './DynamicMenu';\nimport { Col, Menu as AntdMenu, Row } from 'antd';\nimport { getRandomId } from '../../utils/general';\n// noinspection ES6UnusedImports\nimport styles from './HeaderMenuItemRenderer.mscss';\nimport './HeaderMenuItemRenderer.mscss';\nimport { MenuItemIcon } from './MenuItemIcon';\nimport { NavLink } from 'react-router-dom';\n\nconst { SubMenu, Item } = AntdMenu;\n\nconst log = require('debug')('components:HeaderMenuItemRenderer');\n\n\n@hot(module,true)\n@MenuItemRenderer('header')\nexport class HeaderMenuItemRenderer extends React.Component<MenuItemRendererProps> {\n    static displayName = 'HeaderMenuItemRenderer';\n\n    render() {\n        if ( ! this.props.item ) return null;\n        let { item, fontSize, iconStyle, color,items,rendererMaxLevel,renderer, ...props } = this.props;\n        const { icon, sublabel, label }                    = item;\n        const content                                      = (\n            <Row type=\"flex\" justify=\"start\" key={getRandomId(6)}>\n                {icon ? <Col order={1} styleName=\"icon-col\"> <MenuItemIcon styleName=\"icon\" item={item} /> </Col> : null}\n                <Col order={2} styleName=\"icon-col\">\n                    <Row styleName=\"label\">{label}</Row>\n                    <Row styleName=\"sublabel\">{sublabel}</Row>\n                </Col>\n            </Row>\n        );\n        return (\n            <Item key={item.id} {...props} styleName=\"header-menu-item\" >\n                {\n                    item.type === 'link' ?\n                    <a href={item.href} target={item.target} key={getRandomId(6)}>{content}</a> :\n                    item.type === 'router-link' ?\n                    <NavLink to={item.to} key={getRandomId(6)}>{content}</NavLink> :\n                    content\n                }\n            </Item>\n        );\n    }\n}\n","import React from 'react';\nimport { hot } from '../../decorators';\nimport { observer } from 'mobx-react';\nimport { strEnsureLeft } from '../../utils/general';\nimport { api } from '@codex/api';\nimport { classes } from 'typestyle';\n\nconst log = require('debug')('components:MenuItemIcon');\n\nexport interface MenuItemIconProps {\n    item: api.MenuItem\n    iconStyle?: React.CSSProperties\n    fontSize?: string | number\n    className?: string\n}\n\ninterface State {}\n\n@hot(module)\n@observer\nexport class MenuItemIcon extends React.Component<MenuItemIconProps, State> {\n    static displayName                              = 'MenuItemIcon';\n    static defaultProps: Partial<MenuItemIconProps> = {};\n\n    render() {\n        let { item, className } = this.props;\n        if ( ! item.icon ) {\n            return null;\n        }\n        let { iconStyle, fontSize } = this.props;\n        let icon                    = item.icon;\n        icon                        = strEnsureLeft(icon, 'fa-');\n        icon                        = strEnsureLeft(icon, 'fa ');\n\n        return <i className={classes(icon, className)} style={{ ...iconStyle, fontSize }}/>;\n    }\n\n}\n","import React, { Component, ErrorInfo } from 'react';\nimport { colors } from '../../utils/colors';\nimport { hot, WithRouter, WithRouterProps } from '../../decorators';\nimport { UnregisterCallback } from 'history';\nimport { Button, Col, Row } from 'antd';\n\nexport interface ErrorBoundaryProps {\n    title?: string\n    showStacks?: boolean\n    goBackText?: string\n    withError?: SomeError\n}\n\ninterface SomeError extends Error {\n    [ key: string ]: any\n}\n\ninterface State {\n    hasError: boolean\n    error?: SomeError\n    errorInfo?: ErrorInfo\n}\n\nconst log = require('debug')('components:ErrorBoundary');\n\nconst Title = (props) => <h4 style={{ textAlign: 'center' }} {...props}/>\n\nconst Message = (props) => <p style={{ textAlign: 'center', color: colors[ 'red-7' ] }} {...props}/>\n\nconst Stack = (props: { children: any, title?: string, className?: string }) => (\n    <div className={props.className}>\n        {props.title ? <h6>{props.title}</h6> : null}\n        <pre>{props.children}</pre>\n    </div>\n)\n\nconst Stacks = (props: { error: SomeError, errorInfo: ErrorInfo, className?: string }) => (\n    <div style={{ maxHeight: 350, overflowY: 'scroll' }}>\n        <Stack title={props.error.name + ' Stacktrace:'}>{props.error.stack}</Stack>\n        <Stack title=\"Component Stacktrace:\">{props.errorInfo.componentStack}</Stack>\n    </div>\n)\n\n@hot(module, false)\n@WithRouter()\nexport class ErrorBoundary extends Component<ErrorBoundaryProps & WithRouterProps, State> {\n    static displayName                               = 'ErrorBoundary';\n    static defaultProps: Partial<ErrorBoundaryProps> = {\n        title     : 'Whoops..',\n        goBackText: 'Return to previous page'\n    }\n\n    protected unregisterLocationListener: UnregisterCallback = null;\n\n    state: State = { hasError: false }\n\n    componentDidCatch(error: SomeError, errorInfo: ErrorInfo) {\n        this.setState({ hasError: true, error, errorInfo });\n        log('ERROR BOUNDARY', { error, errorInfo });\n    }\n\n    componentDidMount() {\n        this.unregisterLocationListener = this.props.history.listen((location, action) => {\n            if ( this.state.hasError ) {\n                this.setState({ hasError: false })\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unregisterLocationListener();\n    }\n\n    render() {\n        let { title, showStacks, goBackText, withError } = this.props\n        let { error, errorInfo, hasError }               = this.state\n        if ( hasError || withError ) {\n            error = error || withError;\n            log('error', { error })\n            return (\n                <Row type=\"flex\">\n                    <Col xs={24} md={{ span: 12, offset: 6 }}>\n                        <Title>{title}</Title>\n                        <Message>{error.message}</Message>\n                        <Message>{error.linkback ? <Button onClick={e => this.props.history.goBack()}>{goBackText}</Button> : null}</Message>\n                        {showStacks ? <Stacks error={error} errorInfo={errorInfo}/> : null}\n                    </Col>\n                </Row>\n            )\n        }\n        return React.Children.only(this.props.children);\n    }\n}\n","import * as React from 'react';\nimport { hot, WithRouter, WithRouterProps } from '../../decorators';\nimport { IRoute } from '../../interfaces';\nimport { Route, Switch } from 'react-router-dom';\nimport posed, { PoseGroup } from 'react-pose'\n\nexport interface PosedRouterPagesProps extends WithRouterProps {\n    routes: IRoute[]\n}\n\nconst RoutesContainer = posed.div({\n    enter: {\n        opacity       : 1,\n        delay         : 300,\n        beforeChildren: true\n    },\n    exit : { opacity: 0 }\n});\n\n// https://popmotion.io/pose/learn/route-transitions-react-router/\n\n@hot(module)\n@WithRouter()\nexport class RouterPages extends React.PureComponent<PosedRouterPagesProps> {\n    static displayName = 'RouterPages'\n\n    render() {\n        window[ 'routerpages' ]    = this;\n        const { location, routes } = this.props\n        return (\n            <PoseGroup>\n                <RoutesContainer key={location.key || location.pathname}>\n                    <Switch location={location}>\n                        {routes.map((route, i) => <Route key={i} {...route} />)}\n                    </Switch>\n                </RoutesContainer>\n            </PoseGroup>\n        );\n    }\n}\n\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nconst log = require('debug')('decorators');\n\n\nexport function hot<T>(module: NodeModule, hoist = false) {\n    return (TargetComponent) => {\n        if ( DEV ) {\n            let decorator = require('react-hot-loader').hot(module);\n            if ( ! hoist ) {\n                return decorator(TargetComponent);\n            }\n            return hoistNonReactStatics(TargetComponent, decorator(TargetComponent));\n        }\n        return TargetComponent;\n    };\n}\n\nexport const WithRouter = () => {\n    return (target) => {\n        return withRouter(target) as any;\n    };\n};\nexport type WithRouterProps = Partial<RouteComponentProps<any>>\n\n\ninterface Constructor<T> {\n    new(...args: any[]): T;\n}\n\nexport function es5ClassFix(): (target: Constructor<any>) => any {\n    return (target: Constructor<any>) => {\n        return class extends target {\n            constructor(...args: any[]) {\n                super(...args);\n                Object.setPrototypeOf(this, target.prototype);\n            }\n        };\n    };\n}\n","///<reference path=\"../types/index.d.ts\"/>\n\nimport './init';\n\nimport { app, lazyInject } from './ioc';\n\nexport * from './interfaces';\n\nexport * from './classes/Dispatcher';\nexport * from './classes/Application';\nexport * from './classes/HtmlComponents';\nexport * from './collections/Collection';\nexport * from './collections/DictionaryWrapper';\nexport * from './collections/ArrayUtils';\nexport * from './collections/ObservableDictionaryWrapper';\nexport * from './collections/Routes';\n\nexport * from './components';\nexport * from './menus';\nexport * from './stores';\nexport * from './decorators';\n\nexport { app, lazyInject };\n"],"mappings":"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","sourceRoot":""}